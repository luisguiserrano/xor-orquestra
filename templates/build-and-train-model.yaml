spec:

  templates:

  - name: train-model
    parent: generic-task

    inputs:

      parameters:
      - name: docker-image
        value: z-ml
      - name: docker-tag
        value: latest

      - name: hidden_layer
      - name: epochs
      - name: lr

      - name: command
        value: python3 main.py

      artifacts:
      - name: features
        path: /app/features.pth
      - name: labels
        path: /app/labels/pth
      - name: main-script
        path: /app/main.py
        raw:
          data: |
            from xor.utils import save_json 
            from xor.functions import build_dataset
            from xor.functions import build_and_train_model 
            from xor.functions import predict 

            lr = {{inputs.parameters.lr}}
            epochs = {{inputs.parameters.epochs}}
            hidden_layer = {{inputs.parameters.hidden_layer}}
            
            features = load_torch('features.pth')
            labels = load_torch('labels.pth')
            
            model = build_and_train_model(features, labels, hidden_layer, epochs, lr)
            
            predictions = predict(model)
            
            result = {}
            result["predictions"] = predictions
            save_json(result, 'result.json')
  
    outputs:
      artifacts:
      - name: result
        path: /app/result.json
